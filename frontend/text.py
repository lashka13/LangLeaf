from aiogram.types import InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
import random


# Constants
WORDS_MAX = 100
SET_MAX = 30
SYMB_MAX = 100


# Messages
START = '''–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤—ã—É—á–∏—Ç—å –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫. 
–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –∏ —è —Å–∞–º –∏—Ö –ø–µ—Ä–µ–≤–µ–¥—É.

–ù–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–ø—Ä–æ–±—É–π –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–∏ —Å–ª–æ–≤–∞ (–º–æ–∂–µ—à—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∏—Ö):
<code>
coincidence
insufficient
acclaim
magnificient
accommodate
</code>
'''

REGISTER_AT_FIRST = '–°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è, –ø–æ—Ç–æ–º —Ö—É–π–Ω—ë–π —Å–≤–æ–µ–π –º–∞–π—Å—è'
TRASH = '–ù—É –∏ –∫ —á–µ–º—É —Ç—ã —ç—Ç–æ –≤—ã—Å—Ä–∞–ª'
WORDS_INSERTED = '–°–ª–æ–≤–∞ –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –≤–Ω–µ—Å–µ–Ω—ã, —Ö–æ—Ç—è –ª—É—á—à–µ –±—ã —Ç—ã –±—ã–ª —É—Å–ø–µ—à–Ω—ã–º'
WORDS_ERROR = '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ –ø–æ –ø–ª–∞–Ω—É('
CHANGE_CURRENT_STATE = '–í—ã–±–µ—Ä–∏ —Å—ç—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—à—å –ø–æ–º–µ–Ω—è—Ç—å –Ω—ã–Ω–µ—à–Ω–∏–π'
SET_SUCCESS = '–°—ç—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω —Ç–≤–∞—Ä—å'
SET_ADD = '–°—ç—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω —É—Ä–æ–¥'
SET_ERROR = '–ë–æ–ª—å–Ω–æ –º–Ω–æ–≥–æ —Å—ç—Ç–æ–≤ —Ö–æ—á–µ—à—å —Å—É–∫–∞'
SET_2_ERROR = '–ü–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º —Å—ç—Ç–∞ –Ω–∞–ø–∏—à–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ —Å–ª–æ–≤–æ'
LEARN_ERROR = '–î–æ–±–∞–≤—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ —Å–ª–æ–≤–æ –ø–µ—Ä–µ–¥ –∏–∑—É—á–µ–Ω–∏–µ–º'
FINISHED = '–°–ª–æ–≤–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å —Ç–≤–∞—Ä—å'
STOPPED = '–ù—É —Ç—ã –∏ –ø–æ–∑–æ—Ä–∏—â–µ'
EDIT_TRANSLATE_TEXT = '–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –ø–µ—Ä–µ–≤–æ–¥–∞'
EDIT_SUCC = '–ü–µ—Ä–µ–≤–æ–¥ –±—ã–ª –∏—Å–ø—Ä–∞–≤–ª–µ–Ω'
EDIT_ERR = '–ü–µ—Ä–µ–≤–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–º–µ—â—ë–Ω –≤ 150 —Å–∏–º–≤–æ–ª–æ–≤'
NO_FLAGS = '–£ —Ç–µ–±—è –Ω–µ—Ç –ø–æ–º–µ—á–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤'
DELETE_TEXT = '–ù–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É —Ç—ã —É–¥–∞–ª–∏—à—å –í–°–ï —Å–ª–æ–≤–∞ –∏–∑ –≤—Å–µ—Ö —Å—ç—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –∑–∞–≥—Ä—É–∑–∏–ª'
DELETE_SUCC = '–°–ª–æ–≤–∞ –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã((('
WORD_WRITING = '–°–ª–æ–≤–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è...'
DELETE_WORD_TEXT = '–¢—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ —Å–ª–æ–≤–æ?'


# Tyler images
TYLER = [
    'https://yt3.ggpht.com/ytc/AKedOLTJFIX-7xrpMVyULJOJf2sqiwn9PRSiyrEIZC3y=s900-c-k-c0x00ffffff-no-rj',
    'https://imgix.bustle.com/rehost/2016/9/13/1fc6cd08-6bab-421b-908b-3253c18bd893.jpg?w=800&fit=crop&crop=faces&auto=format%2Ccompress&q=50&dpr=2',
    'https://yt3.ggpht.com/ytc/AKedOLTmUwY70GypVfoCJVO6RE33Tm-93wb0Jjwn9YH09g=s900-c-k-c0x00ffffff-no-rj',
    'https://wikiwarriors.org/mediawiki/images/thumb/a/ad/Deathofkevincrow.jpg/1200px-Deathofkevincrow.jpg',
    'https://phonoteka.org/uploads/posts/2022-09/1662151094_5-phonoteka-org-p-tailer-derden-oboi-pinterest-5.jpg',
    'https://u.livelib.ru/character/1000000242/o/76uchx3w/1394421836409-o.jpeg',
    'https://i.pinimg.com/originals/22/d3/63/22d3637fd04754eaefb1cbe4ace632d4.jpg'
]


# Markups
DELETE_MARKUP = InlineKeyboardBuilder()
DELETE_MARKUP.add(InlineKeyboardButton(text='üíî –£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–∞', callback_data='delete_all_words'))

EDIT_BUTTON = InlineKeyboardBuilder()
EDIT_BUTTON.add(InlineKeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∏–∑—É—á–µ–Ω–∏—é', callback_data='back_to_learn'))

STOP_EDITING = InlineKeyboardBuilder()
STOP_EDITING.add(InlineKeyboardButton(text='–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ', callback_data='continue_learning'))

# Functions
def get_menu_text(options, words):
    return f'''üë§ –ò–º—è: {options[0].first_name}
ü©∏ –°–ª–æ–≤: {words}'''


def LEN_ERROR(phrase):
    return f'–í–æ —Ñ—Ä–∞–∑–µ {phrase[:20]}... –ø—Ä–µ–≤—ã—à–µ–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ (–±–æ–ª—å—à–µ —Å—Ç–∞ –Ω–µ–ª—å–∑—è)'


def MAX_WORDS_ERROR(change):
    if change == 1:
        return f'''–¢—ã –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–ª—è—Ç—å —Å–ª–æ–≤–∞ –≤ —ç—Ç–æ—Ç —Å—ç—Ç, —Ç–≤–æ–π –ª–∏–º–∏—Ç –∫–æ–Ω—á–∏–ª—Å—è, –Ω–æ –Ω–µ –≤—Ä–µ–º—è –ø–∞–Ω–∏–∫–æ–≤–∞—Ç—å,
        —É—â–µ—Ä–±–Ω—ã–π. –¢—ã –º–æ–∂–µ—à—å –ª–∏–±–æ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Å—ç—Ç (–º–∞–∫—Å–∏–º—É–º {SET_MAX}), –ª–∏–±–æ —É–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–∞ –∏–∑ —ç—Ç–æ–≥–æ —Å—ç—Ç–∞'''
    else:
        return f'–¢—ã –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Å–ª–æ–≤, –æ—Ç–ø—Ä–∞–≤—å –Ω–∞ {change} –º–µ–Ω—å—à–µ –∏–ª–∏ —Å–æ–∑–¥–∞–π –Ω–æ–≤—ã–π —Å—ç—Ç'


def get_menu_markup(swapped, cur_set):
    buttons = InlineKeyboardBuilder()
    buttons.add(InlineKeyboardButton(text=f'ü™ì –¢–µ–∫—É—â–∏–π —Å—ç—Ç: {cur_set}', callback_data='change_set'))
    buttons.add(InlineKeyboardButton(text=f"üå± RU-EN: {'–î–∞' if swapped else '–ù–µ—Ç'}", callback_data='swap_menu'))
    return buttons


def get_sets_markup(sets):
    buttons = InlineKeyboardBuilder()
    sets = [sets[i:i + 3] for i in range(0, len(sets), 3)]
    for set_group in sets:
        buttons.row(*[InlineKeyboardButton(text=str(i), callback_data=f'set_cur_state_{i}') for i in set_group])
    buttons.row(InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Å—ç—Ç', callback_data='add_new_set'))
    return buttons


def mix_list(list_original):
    list = list_original[:]
    list_length = len(list)
    for i in range(list_length):
        index_aleatory = random.randint(0, list_length - 1)
        temp = list[i]
        list[i] = list[index_aleatory]
        list[index_aleatory] = temp
    return list


def get_learn_text(group, swapped, word, translated, index, words_count):
    if group['type'] == 'set':
        group = f'—Å—ç—Ç ‚Ññ {group["set"]}'
    elif group['type'] == 'all':
        group = '–≤—Å–µ —Å–ª–æ–≤–∞'
    return f"""–¢–µ–∫—É—â–∏–π –Ω–∞–±–æ—Ä: <b>{group}</b>
RU-EN: <b>{'–î–∞' if swapped else '–ù–µ—Ç'}</b>
–°–ª–æ–≤: <b>{index}/{words_count}</b>
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
{word}
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
<span class='tg-spoiler'>{translated}</span>"""


def get_learn_markup(word_id, flag):
    buttons = InlineKeyboardBuilder()
    buttons.row(InlineKeyboardButton(text='–°–ª–µ–¥—É—é—â–µ–µ —Å–ª–æ–≤–æ ‚û°Ô∏è', callback_data='next_word'))
    buttons.row(
        InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å üòà', callback_data=f'delete_choice_{word_id}'),
        InlineKeyboardButton(text='–°–≤–∞–ø üí´', callback_data='swap'),
        InlineKeyboardButton(text='üö©' if flag else 'üè≥Ô∏è', callback_data=f'flag_{word_id}'),
    )
    buttons.row(InlineKeyboardButton(text='‚ùå –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è (–µ—Å–ª–∏ —á–º–æ)', callback_data='stop_learning'))
    buttons.row(InlineKeyboardButton(text='üê° –°–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–µ–≤–æ–¥', callback_data=f'edit_translate'))
    return buttons


def swap_changed(after):
    return f"RU-EN —Ä–µ–∂–∏–º {'–≤–∫–ª—é—á–µ–Ω' if after else '–≤—ã–∫–ª—é—á–µ–Ω'}"


def get_delete_word_markup(word_id):
    DELETE_WORD_MARKUP = InlineKeyboardBuilder()
    DELETE_WORD_MARKUP.add(InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å', callback_data=f'delete_word_{word_id}'))
    DELETE_WORD_MARKUP.add(InlineKeyboardButton(text='–û—Å—Ç–∞–≤–∏—Ç—å', callback_data=f'next_word'))
    return DELETE_WORD_MARKUP


# Help message
HELP = f"""–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã —Ç—ã, —É–±–ª—é–¥–æ–∫, c–º–æ–≥ –Ω–∞—É–∏—Ç—å—Å—è —Å–ø–æ–∫–æ–π–Ω–æ —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ.
–¢–æ–ª—å–∫–æ —Ç—ã –∏ –Ω–∏–∫—Ç–æ –¥—Ä—É–≥–æ–π –Ω–µ –º–æ–∂–µ—Ç —ç—Ç–æ–≥–æ —Å–¥–µ–ª–∞—Ç—å –∑–∞ —Ç–µ–±—è, —ç—Ç–æ—Ç –±–æ—Ç –º–æ–∂–µ—Ç –ª–∏—à—å –ø–æ–º–æ—á—å —Ç–µ–±–µ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å.
–°—Ö–µ–º–∞ –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–∞—è: —Ç—ã –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—à—å –≤—Å–µ–≤–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ (—Ñ–∏–ª—å–º—ã, —Å–∞–π—Ç—ã, –∫–Ω–∏–≥–∏)
–Ω–∞ –¢–í–û–Å–ú —É—Ä–æ–≤–Ω–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—à—å –≤ –±–æ—Ç–∞ —Å–ª–æ–≤–∞ –∏ –≤—ã—Ä–∞–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±–µ –Ω–µ –∏–∑–≤–µ—Å—Ç–Ω—ã. –ï—Å–ª–∏ —Ö–æ—á–µ—à—å —Å—Ä–∞–∑—É –∑–∞–≥—Ä—É–∑–∏—Ç—å
–ø–∞—á–∫—É —Å–ª–æ–≤ –ø–∏—à–∏ –∏—Ö —á–µ—Ä–µ—Ö Enter. –í –±–æ—Ç–µ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ —Å—ç—Ç–æ–≤, –≤—Å–µ–≥–æ —É –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–æ–∂–µ—Ç
–±—ã—Ç—å {SET_MAX} —Å—ç—Ç–æ–≤, –≤ –∫–∞–∂–¥–æ–º –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö {WORDS_MAX} —Å–ª–æ–≤, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –º–∞–∫—Å–∏–º—É–º {SYMB_MAX} —Å–∏–º–≤–æ–ª–æ–≤. –ù–∞–ø—Ä–∏–º–µ—Ä: 
—Ç—ã –≤–Ω—ë—Å –≤ –ø–µ—Ä–≤—ã–π —Å—ç—Ç 40 —Å–ª–æ–≤ –∏ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è —Ç—ã –∏—Ö –¥–æ—Å–∫–∞–Ω–∞–ª—å–Ω–æ –≤—ã—É—á–∏–ª, –ø–æ—Ç–æ–º —Ç—ã —Ö–æ—á–µ—à—å –∑–∞–≥—Ä—É–∑–∏—Ç—å 
–µ—â—ë 40 —Å–ª–æ–≤, –Ω–æ –∫–æ–≥–¥–∞ —Ç—ã –±—É–¥–µ—à—å —É—á–∏—Ç—å —É–∂–µ –Ω–æ–≤—ã–µ —Å–ª–æ–≤–∞, —Å—Ç–∞—Ä—ã–µ —Å–ª–æ–≤–∞ –±—É–¥—É—Ç –ª–∏—à—å –º–µ—à–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å—É, –ø–æ—ç—Ç–æ–º—É 
—ç—Ç–∏ –Ω–æ–≤—ã–µ —Å–ª–æ–≤–∞ –ª—É—á—à–µ –ø–æ–º–µ—Å—Ç–∏—Ç—å –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Å—ç—Ç, —á—Ç–æ–±—ã —Å—Ç–∞—Ä—ã–µ —Å–ª–æ–≤–∞ –Ω–µ –º–µ—à–∞–ª–∏—Å—å. –ï—â—ë —Ç–µ–±–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≥–æ–¥–∏—Ç—å—Å—è —Å–ø–∏—Å–æ–∫ 
–∫–æ–º–º–∞–Ω–¥:
/menu - –≤—ã–∑–≤–∞—Ç—å –º–µ–Ω—é
/learn - –Ω–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ
/flags - –≤—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ –æ—Ç–º–µ—á–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤. –°–ª–æ–≤–∞ —Ç—ã –º–æ–∂–µ—à—å –æ—Ç–º–µ—á–∞—Ç—å –≤–æ –≤—Ä–µ–º—è –æ–±—É—á–µ–Ω–∏—è, –Ω–∞–∂–∞–≤ –Ω–∞ –±–µ–ª—ã–π —Ñ–ª–∞–∂–æ–∫
/list - —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤ EN-RU
/sw_list - —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤ RU-EN
/swap - –ø–æ–º–µ–Ω—è—Ç—å —Ä–µ–∂–∏–º –æ–±—É—á–µ–Ω–∏—è
/delete - —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å–ª–æ–≤–∞"""

DELETE_TEXT = '–ù–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É —Ç—ã —É–¥–∞–ª–∏—à—å –í–°–ï —Å–ª–æ–≤–∞ –∏–∑ –≤—Å–µ—Ö —Å—ç—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –∑–∞–≥—Ä—É–∑–∏–ª'
DELETE_MARKUP = InlineKeyboardBuilder()
DELETE_MARKUP.add(InlineKeyboardButton(text='üíî –£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–∞', callback_data='delete_all_words'))
DELETE_SUCC = '–°–ª–æ–≤–∞ –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã((('
EDIT_BUTTON = InlineKeyboardBuilder()
EDIT_BUTTON.add(InlineKeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∏–∑—É—á–µ–Ω–∏—é', callback_data='back_to_learn'))
WORD_WRITING = '–°–ª–æ–≤–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è...'
DELETE_WORD_TEXT = '–¢—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ —Å–ª–æ–≤–æ?'

def get_delete_word_markup(word_id):
    DELETE_WORD_MARKUP = InlineKeyboardBuilder()
    DELETE_WORD_MARKUP.add(InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å', callback_data=f'delete_word_{word_id}'))
    DELETE_WORD_MARKUP.add(InlineKeyboardButton(text='–û—Å—Ç–∞–≤–∏—Ç—å', callback_data=f'next_word'))
    return DELETE_WORD_MARKUP